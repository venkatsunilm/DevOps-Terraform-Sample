name: Terraform CI/CD Workflow

on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - develop
      - main
      - refactor*

jobs:
  terraform:
    runs-on: ubuntu-latest

    # Automatically choose the environment: default is "development", use "production" for the "main" branch
    environment:
      name: "${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}"

    env:
      # Terraform variables are pulled from GitHub Environment Variables
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      TF_VAR_environment: ${{ vars.TF_VAR_ENVIRONMENT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create tfvars file from secrets
        run: echo "${{ secrets.TFVARS }}" > environments/$TF_VAR_environment.tfvars

      # Debug step: Print the contents of the tfvars file (optional)
      - name: Print tfvars contents (optional)
        run: |
          echo "Contents of $TF_VAR_environment.tfvars file:"
          cat environments/$TF_VAR_environment.tfvars

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Terraform Init
      - name: Terraform Init
        run: terraform init
        working-directory: environments/shared

      # Terraform Plan
      - name: Terraform Plan
        run: terraform plan -var-file="../$TF_VAR_environment.tfvars"
        working-directory: environments/shared

      # # Terraform Apply
      # - name: Terraform Apply
      #   run: terraform apply -auto-approve
      #   working-directory: environments/${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

      # # Terraform Apply
      # - name: Terraform Destroy
      #   run: terraform destroy -auto-approve
      #   working-directory: environments/${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
