name: Deploy Web App

on:
  workflow_run:
    workflows: ["Deploy Infrastructure"]  # Name of the infra workflow
    types:
      - completed
  workflow_dispatch:

jobs:
  build-push-deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev]  # Matrix for multiple environments

    environment:
      name: "${{ matrix.environment }}"

    env:
      DOCKER_IMAGE_NAME_WEBAPP: ${{ vars.DOCKER_IMAGE_NAME_WEBAPP }}
      IMAGE_VERSION_WEBAPP: latest
      KUBECONFIG: /home/runner/.kube/config
      KUBE_CONFIG_PATH: /home/runner/.kube/config
      TF_VAR_environment: ${{ matrix.environment }}
      TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}  # Check out the correct branch that triggered the first workflow

      - name: Display structure of downloaded files
        run: ls -R

      - name: Download Infrastructure Outputs Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: infra-outputs

      - name: Display structure of downloaded files 2
        run: ls

      - name: Read JSON and Set Variables
        run: |
          INFRA_OUTPUTS=$(cat ./artifacts/infrastructure-outputs.json)
          export AKS_CLUSTER_NAME=$(echo "$INFRA_OUTPUTS" | jq -r '.AKS_CLUSTER_NAME')
          export AKS_RESOURCE_GROUP=$(echo "$INFRA_OUTPUTS" | jq -r '.AKS_RESOURCE_GROUP')
          export ACR_REGISTRY_NAME=$(echo "$INFRA_OUTPUTS" | jq -r '.ACR_REGISTRY_NAME')

          echo "AKS_CLUSTER_NAME=$AKS_CLUSTER_NAME" >> $GITHUB_ENV
          echo "AKS_RESOURCE_GROUP=$AKS_RESOURCE_GROUP" >> $GITHUB_ENV
          echo "ACR_REGISTRY_NAME=$ACR_REGISTRY_NAME" >> $GITHUB_ENV

      - name: Print Variables
        run: |
          echo "ACR_REGISTRY_NAME: $ACR_REGISTRY_NAME"
          echo "AKS_CLUSTER_NAME: $AKS_CLUSTER_NAME"
          echo "AKS_RESOURCE_GROUP: $AKS_RESOURCE_GROUP"

      - name: Invoke Docker Build & Push Action
        uses: ./.github/actions/docker-action
        with:
          image_name: ${{ secrets.DOCKER_IMAGE_NAME_WEBAPP }}
          registry_name: $ACR_REGISTRY_NAME
          version: latest
          working-directory: data-upload-app/src

      - name: Invoke Terraform Composite Action for Helm
        uses: ./.github/actions/terraform-action
        with:
          environment: ${{ matrix.environment }}
          working-directory: ./data-upload-app/deployment
